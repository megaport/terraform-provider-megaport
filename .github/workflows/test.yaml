name: Tests

on:
  push:
    paths-ignore:
      - 'README.md'
    branches:
      - 'main'
  pull_request:
    paths-ignore:
      - 'README.md'
    branches:
      - 'main'
  workflow_dispatch:

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.5' # Explicitly set Go version
          cache: true
          cache-dependency-path: 'go.sum'
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@v7
        with:
          version: 'v2.6.0' # Use golangci-lint v2 to match config version
          args: --timeout=10m
          skip-cache: true # Disable golangci-lint-action's cache
        # Add retry logic
        continue-on-error: true
        id: lint
      # Retry once if it fails
      - name: Run linters (retry)
        if: steps.lint.outcome == 'failure'
        uses: golangci/golangci-lint-action@v7
        with:
          version: 'v2.6.0' # Use golangci-lint v2 to match config version
          args: --timeout=10m
          skip-cache: true # Also disable cache in the retry step

  generate:
    name: Generate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      # Temporarily download Terraform 1.8 prerelease for function documentation support.
      # When Terraform 1.8.0 final is released, this can be removed.
      - uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1
        with:
          terraform_version: '1.8.0-alpha20240216'
          terraform_wrapper: false
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)

  # Run unit tests
  unit-test:
    name: Terraform Provider Unit Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go test -v -timeout=30m -cover ./internal/provider/

  opentofu-test:
    name: OpenTofu Compatibility Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        tofu-version:
          - '1.6.0' # Latest stable OpenTofu version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      # Install OpenTofu
      - name: Install OpenTofu
        run: |
          curl -SL https://github.com/opentofu/opentofu/releases/download/v${{ matrix.tofu-version }}/tofu_${{ matrix.tofu-version }}_linux_amd64.zip -o tofu.zip
          unzip -o tofu.zip  # Use -o flag to overwrite files without prompting
          chmod +x tofu
          sudo mv tofu /usr/local/bin/
          tofu version

      # Run basic compatibility tests
      - name: OpenTofu Provider Compatibility Check
        run: |
          # Build provider binary with correct naming convention
          cd $GITHUB_WORKSPACE
          go build -o terraform-provider-megaport_v1.0.0
          chmod +x terraform-provider-megaport_v1.0.0

          # Create test directory
          mkdir -p /tmp/opentofu-test
          cd /tmp/opentofu-test

          # Create proper directory structure for the provider
          # Note: We need to match the source exactly as it appears in the configuration
          mkdir -p .terraform/plugins/registry.terraform.io/megaport/megaport/1.0.0/linux_amd64/
          cp $GITHUB_WORKSPACE/terraform-provider-megaport_v1.0.0 .terraform/plugins/registry.terraform.io/megaport/megaport/1.0.0/linux_amd64/
          chmod +x .terraform/plugins/registry.terraform.io/megaport/megaport/1.0.0/linux_amd64/terraform-provider-megaport_v1.0.0

          # Create test config with fully qualified source
          cat > main.tf << 'EOL'
          terraform {
            required_providers {
              megaport = {
                source = "registry.terraform.io/megaport/megaport"
                version = "1.0.0"
              }
            }
          }

          provider "megaport" {
            environment = "staging"
            access_key = "test"
            secret_key = "test"
            accept_purchase_terms = true
          }
          EOL

          # Run OpenTofu commands
          # Let OpenTofu discover the plugin in the .terraform directory
          tofu init
          tofu providers

          echo "OpenTofu compatibility test completed successfully"

  # TODO: reenable these once we get a better public workflow for PRs
  # # Run acceptance tests in a matrix with Terraform CLI versions
  # test:
  #   name: Terraform Provider Acceptance Tests
  #   needs: build
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       # list whatever Terraform versions here you would like to support
  #       terraform:
  #         - '1.7.*'
  #         - '1.8.*'
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v5
  #       with:
  #         go-version-file: 'go.mod'
  #         cache: true
  #     - uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8 # v3.1.1
  #       with:
  #         terraform_version: ${{ matrix.terraform }}
  #         terraform_wrapper: false
  #     - run: go mod download
  #     - env:
  #         TF_ACC: "1"
  #         MEGAPORT_ACCESS_KEY: ${{ secrets.MEGAPORT_ACCESS_KEY }}
  #         MEGAPORT_SECRET_KEY: ${{ secrets.MEGAPORT_SECRET_KEY }}
  #       run: go test -v -timeout=30m -cover ./internal/provider/
